; Setup regs
lil r1, 0x2000
lil r2, 0x4000
lil r3, 0x6000
lil r4, 0x8000
lil r5, 14
lil r6, 1
lil r7, 0xa000
lil r30, 0xc000

lil r11, 0x0000
lih r11, 0x0FE0		; the number 1 in floating point
;lih r11, 0x1000		; the number 2 in floating point
lil r12, 0x00
lih r12, 0x00
vsplat 0b1111, v20, r12 ; Zeros
vsplat 0b1111, v21, r12
vsplat 0b1111, v22, r12
vsplat 0b1111, v23, r12
vsplat 0b0001, v21, r11	; Middle 1 in first layer
vsplat 0b0010, v22, r11	; Middle 1 in center layer
vsplat 0b0100, v23, r11	; Middle 1 in last layer

addi r15, r4, 0x00

; First filter
vsti 0b1111, [r15+=0x10], v21
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20
vsti 0b1111, [r15+=0x10], v20

; Second filter
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v22
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20

; Third filter
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v23
;vsti 0b1111, [r15+=0x10], v20
;vsti 0b1111, [r15+=0x10], v20

;lih r11, 0x00
;lil r11, 0x00
;lih r13, 0x00
;lil r13, 0x80
; Use r11
;fill_weights:
;	mul r15, r11, r13
;	add r15, r4, r15		; filter location
;	vsti 0b1111, [r15+=0x10], v20
;	;vsti 0b1111, [r15+=0x10], v21
;	vsti 0b1111, [r15+=0x10], v20
;	vsti 0b1111, [r15+=0x10], v20
;	vsti 0b1111, [r15+=0x10], v22
;	vsti 0b1111, [r15+=0x10], v20
;	vsti 0b1111, [r15+=0x10], v20
;	vsti 0b1111, [r15+=0x10], v20
;	vsti 0b1111, [r15+=0x10], v20
	
;addi r11, r11, 0x01
;cmp r11, r6; # r11 < num filters
;blzi fill_weights

lih r20, 0x00
lil r20, 0x00
lil r13, 0x00		; number put into memory
lil r14, 0x40		; amount of memory per row (vector aligned)

yepthatsalabel:
	lih r11, 0x00
	lil r11, 0x00
	fill_matrix:
		;vsplat 0b1111, v21, r12
		
		addi r13, r13, 0x01
		vsplat 0b0001, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0010, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0100, v21, r13
		addi r13, r13, 0x01
		vsplat 0b1000, v21, r13
		
		mul r23, r20, r14
		mul r23, r23, r5
		mul r15, r11, r14
		add r15, r15, r23
		add r15, r15, r1
		vsti 0b1111, [r15+=0x10], v21
		
		addi r13, r13, 0x01
		vsplat 0b0001, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0010, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0100, v21, r13
		addi r13, r13, 0x01
		vsplat 0b1000, v21, r13
		vsti 0b1111, [r15+=0x10], v21
		
		addi r13, r13, 0x01
		vsplat 0b0001, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0010, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0100, v21, r13
		addi r13, r13, 0x01
		vsplat 0b1000, v21, r13
		vsti 0b1111, [r15+=0x10], v21
		
		addi r13, r13, 0x01
		vsplat 0b0001, v21, r13
		addi r13, r13, 0x01
		vsplat 0b0010, v21, r13
		;addi r13, r13, 0x01
		;vsplat 0b0100, v21, r13
		;addi r13, r13, 0x01
		;vsplat 0b1000, v21, r13
		vsplat 0b1100, v21, r12
		vsti 0b1111, [r15+=0x10], v21
		
	addi r11, r11, 0x01
	cmp r11, r5
	blzi fill_matrix

addi r20, r20, 0x01
cmpi r20, 0x03
blzi yepthatsalabel

; call function
bkpt 0x01
jal convolution_stride2
bkpt 0x0a
halt

%include "conv_2d.txt"